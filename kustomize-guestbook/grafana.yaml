apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboardproviders
  namespace: customer
data:
  dashboardproviders.yaml: |-
    apiVersion: 1

    providers:
      - name: default
        disableDeletion: false
        editable: true
        folder: ""
        orgId: 1
        type: file
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: customer
data:
  datasource.yaml: |-
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        version: 1
        isDefault: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000
      - name: Rapportages
        type: mysql
        url: mysql-rapp:3306
        database: Rapportages
        user: mysqluser
        secureJsonData:
          password: ${MYSQL_USER_PASSWORD}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
    version: "1.0"
  name: grafana
  namespace: customer
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: grafana
      version: "1.0"
  template:
    metadata:
      labels:
        app: grafana
        version: "1.0"
    spec:
      securityContext:
        runAsUser: 472
        fsGroup: 472
      containers:
        - name: grafana
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-credentials
                  key: admin-password
            - name: MYSQL_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-user-password
                  name: mysql-credentials
          image: grafana/grafana:8.3.3
          ports:
            - name: grafana
              protocol: TCP
              containerPort: 3000
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
            - name: grafana-dashboardproviders
              mountPath: "/etc/grafana/provisioning/dashboards/"
            - name: dashboard-ivu
              mountPath: /var/lib/grafana/dashboards/ivu   
            - name: vertraging-lijnen-dashboard
              mountPath: /var/lib/grafana/dashboards/lijn-prestaties           
            - name: dashboard-loki
              mountPath: /var/lib/grafana/dashboards/loki           
            - name: dashboard-punctualiteit
              mountPath: /var/lib/grafana/dashboards/punctualiteit           
            - name:  dashboard-rabbitmq
              mountPath: /var/lib/grafana/dashboards/rabbitmq           
            - name: dashboard-service
              mountPath: /var/lib/grafana/dashboards/service           
            - name: vertraging-concessie-dashboard
              mountPath: /var/lib/grafana/dashboards/concessie          
            - name: vertraging-haltes-dashboard
              mountPath: /var/lib/grafana/dashboards/halte
          resources:
            limits:
              memory: 256Mi
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-dashboardproviders
          configMap:
            name: grafana-dashboardproviders
        - name: dashboard-ivu
          configMap:
            defaultMode: 420
            name: gebruik-ivu-app-dashboard 
        - name: vertraging-lijnen-dashboard
          configMap:
            defaultMode: 420
            name: vertraging-lijnen-dashboard  
        - name: dashboard-loki
          configMap:
            defaultMode: 420
            name: dashboard-loki       
        - name: dashboard-punctualiteit
          configMap:
            defaultMode: 420
            name: dashboard-punctualiteit        
        - name: dashboard-rabbitmq
          configMap:
            defaultMode: 420
            name: dashboard-rabbitmq        
        - name: dashboard-service
          configMap:
            defaultMode: 420
            name: dashboard-service
        - name: vertraging-concessie-dashboard
          configMap:
            defaultMode: 420
            name: vertraging-concessie-dashboard  
        - name: vertraging-haltes-dashboard
          configMap:
            defaultMode: 420
            name: vertraging-haltes-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: customer
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000

---
apiVersion: 'networking.k8s.io/v1'
kind: 'Ingress'
metadata:
  annotations:
    cert-manager.io/cluster-issuer: 'letsencrypt-issuer' # letsencrypt configuration
  name: 'grafana-ingress'
spec:
  ingressClassName: 'nginx'
  rules:
    - host: 'grafana.han-project2.minor.infosupport.dev'
      http:
        paths:
          - backend:
              service:
                name: 'grafana'
                port: # use number or name, not both
                  number: 3000
            path: '/'
            pathType: 'Prefix' # "Exact", "Prefix", or "ImplementationSpecific"
  tls:
    - hosts:
        - 'grafana.han-project2.minor.infosupport.dev'
      secretName: 'grafana-ingress-tls-secret'
